1. Immediately Invoked Function Expression (IIFE)
js
Copy code
(function() {
  "use strict";
  // কোড এখানে
})()
ব্যাখ্যা:

এটি একটি Self-Executing Function।

এটি গ্লোবাল স্কোপ দূষণ এড়াতে ব্যবহৃত হয়।

"use strict" ব্যবহার করলে কোড স্ট্রিক্ট মোডে চলে, ভুল ধরতে সুবিধা হয় (যেমন undeclared variable নিষিদ্ধ হয়)।

2. Utility Function: select
js
Copy code
const select = (el, all = false) => {
  el = el.trim()
  if (all) {
    return [...document.querySelectorAll(el)]
  } else {
    return document.querySelector(el)
  }
}
ব্যাখ্যা:

select হল একটি শর্টকাট ফাংশন যা CSS সিলেক্টরের মাধ্যমে DOM এলিমেন্ট বেছে নেয়।

all = false ডিফল্ট মান; চাইলে একাধিক এলিমেন্টও ফেরত দিতে পারে।

trim() দিয়ে হোয়াইটস্পেস বাদ দেয়া হয়।

3. Utility Function: on
js
Copy code
const on = (type, el, listener, all = false) => {
  let selectEl = select(el, all)
  if (selectEl) {
    if (all) {
      selectEl.forEach(e => e.addEventListener(type, listener))
    } else {
      selectEl.addEventListener(type, listener)
    }
  }
}
ব্যাখ্যা:

এই ফাংশন ইভেন্ট লিসেনার অ্যাড করে নির্দিষ্ট এলিমেন্টে।

type মানে ইভেন্ট টাইপ (যেমন 'click', 'scroll')।

4. Utility Function: onscroll
js
Copy code
const onscroll = (el, listener) => {
  el.addEventListener('scroll', listener)
}
ব্যাখ্যা:

স্ক্রল ইভেন্ট লিসেনার যোগ করে নির্দিষ্ট এলিমেন্টে।

5. Navbar Active Link Toggle
js
Copy code
let navbarlinks = select('#navbar .scrollto', true)
const navbarlinksActive = () => {
  let position = window.scrollY + 200
  navbarlinks.forEach(navbarlink => {
    if (!navbarlink.hash) return
    let section = select(navbarlink.hash)
    if (!section) return
    if (position >= section.offsetTop && position <= (section.offsetTop + section.offsetHeight)) {
      navbarlink.classList.add('active')
    } else {
      navbarlink.classList.remove('active')
    }
  })
}
ব্যাখ্যা:

পেজ স্ক্রল করার সময় কোন সেকশনটি ভিজিবল সেটি দেখে মেনুতে অ্যাকটিভ ক্লাস অ্যাড/রিমুভ করে।

6. Scroll To Function
js
Copy code
const scrollto = (el) => {
  let header = select('#header')
  let offset = header.offsetHeight
  let elementPos = select(el).offsetTop
  window.scrollTo({
    top: elementPos - offset,
    behavior: 'smooth'
  })
}
ব্যাখ্যা:

স্ক্রল করে নির্দিষ্ট সেকশনে নিয়ে যায় এবং হেডারের হাইট অ্যাডজাস্ট করে।

7. Header Scrolled ক্লাস টগল
js
Copy code
const headerScrolled = () => {
  if (window.scrollY > 100) {
    selectHeader.classList.add('header-scrolled')
    if (selectTopbar) {
      selectTopbar.classList.add('topbar-scrolled')
    }
  } else {
    selectHeader.classList.remove('header-scrolled')
    if (selectTopbar) {
      selectTopbar.classList.remove('topbar-scrolled')
    }
  }
}
ব্যাখ্যা:

স্ক্রল পজিশন অনুযায়ী হেডার ও টপবারে ক্লাস টগল করে।

8. Back to Top Button
js
Copy code
const toggleBacktotop = () => {
  if (window.scrollY > 100) {
    backtotop.classList.add('active')
  } else {
    backtotop.classList.remove('active')
  }
}
ব্যাখ্যা:

স্ক্রল করলে back-to-top বাটন দেখা যাবে।

9. Mobile Nav Toggle & Dropdown Activation
js
Copy code
on('click', '.mobile-nav-toggle', function(e) {
  select('#navbar').classList.toggle('navbar-mobile')
  this.classList.toggle('bi-list')
  this.classList.toggle('bi-x')
})
ব্যাখ্যা:

মোবাইল মেনু ওপেন/ক্লোজ করার জন্য ক্লাস টগল করে।

10. Menu Filter with Isotope
js
Copy code
let menuIsotope = new Isotope(menuContainer, {
  itemSelector: '.menu-item',
  layoutMode: 'fitRows'
});
ব্যাখ্যা:

Isotope লাইব্রেরি ব্যবহার করে গ্রিড এলিমেন্ট গুলোকে ফিল্টার এবং লেআউট ম্যানেজ করা হয়।

11. Swiper Sliders
js
Copy code
new Swiper('.testimonials-slider', {
  speed: 600,
  loop: true,
  autoplay: {
    delay: 5000,
    disableOnInteraction: false
  },
  slidesPerView: 'auto',
  pagination: {
    el: '.swiper-pagination',
    type: 'bullets',
    clickable: true
  }
});
ব্যাখ্যা:

Swiper লাইব্রেরি দিয়ে স্লাইডার তৈরি করা হয়েছে।

autoplay, loop, pagination সহ কাস্টম কনফিগ রয়েছে।

12. GLightbox Initialization
js
Copy code
const galleryLightbox = GLightbox({
  selector: '.gallery-lightbox'
});
ব্যাখ্যা:

গ্যালারি ইমেজে লাইটবক্স ইফেক্ট অ্যাক্টিভ করে।

যদি আপনি চান, আমি এই পুরো কোডের প্রতিটি ফাংশনের ভিজুয়াল ডেমো বা আরও গভীর পর্যায়ের ব্যাখ্যা সহ আলাদা আলাদা অংশ করেও ব্যাখ্যা দিতে পারি।
আপনার পরবর্তী চাহিদা অনুযায়ী ফোকাস বাড়াতে পারি—উদাহরণস্বরূপ, শুধুমাত্র DOM ম্যানিপুলেশন, ইভেন্ট হ্যান্ডলিং, অথবা লাইব্রেরি ব্যবহারের উপর।

আপনি কোন অংশটি আগে বিস্তারিত জানতে চান?






You said:
দয়া করে গভীর ভাবে ব্যাখ্যা করে দেন
ChatGPT said:
নিচে পুরো স্ক্রিপ্টের প্রতিটি জাভাস্ক্রিপ্ট সিনট্যাক্স-স্ট্রাকচার এবং লজিক “গভীরভাবে” ব্যাখ্যা করা হলো। আমি প্রতিটি ব্লক আলাদা করে, ES6+ ফিচারগুলো (যেমন arrow functions, default parameters, spread operator ইত্যাদি) পরিষ্কারভাবে দেখিয়ে দিচ্ছি।

1. IIFE (Immediately Invoked Function Expression)
js
Copy code
(function() {
  "use strict";
  // … সব কোড এখানে …
})();
(function(){ … })()
– প্রথম ( … ) অংশে আমরা একটা অজ্ঞাতনামা (anonymous) ফাংশন লিখি।
– পরে () দিয়ে তা অনিবার্য (immediately) কল করে দেই।

উদ্দেশ্য: গ্লোবাল স্কোপ নোয়েজ কমানো, ভেরিয়েবল লিকেজ এড়ানো।

"use strict";
– স্ট্রিক্ট মোড চালু করে, যেটা:

Undeclared ভেরিয়েবল ডিক্লেয়ার রোধ করে।

Reserved keywords (যেমন arguments.callee) নিষিদ্ধ করে।

Silent errors-কে Exceptions-এ ফেলে দেয়।

2. const ও Arrow Functions
js
Copy code
const select = (el, all = false) => { … };
const
– Block-scoped, immutable reference।

(el, all = false)
– el: প্রথম প্যারামিটার, হয়তো "#navbar a" এর মতো CSS সিলেক্টর।
– all = false: ডিফল্ট প্যারামিটার—যদি কল করার সময় দ্বিতীয় আর্গুমেন্ট না দেওয়া হয়, তাহলে all হবে false।

=>
– Arrow function, যেটা function(el, all){…} এর শর্ট-হ্যান্ড।

২.১. ঠিক কিভাবে কাজ করে
js
Copy code
el = el.trim();
if (all) {
  return [...document.querySelectorAll(el)];
} else {
  return document.querySelector(el);
}
el.trim(): স্ট্রিং-এর শুরু ও শেষে থাকা whitespace ছাঁটাই করে।

document.querySelectorAll(el): সমস্ত মিলানো DOM nodeList ফিরিয়ে দেয়।

[ ...nodeList ]: Spread operator দিয়ে nodeList কে অবজেক্ট-হনে Array-এ রূপান্তর।

যথা প্রয়োজন একটি বা সব এলিমেন্ট রিটার্ন।

3. ইভেন্ট লিসেনার হেল্পার: on
js
Copy code
const on = (type, el, listener, all = false) => {
  let selectEl = select(el, all);
  if (selectEl) {
    if (all) {
      selectEl.forEach(e => e.addEventListener(type, listener));
    } else {
      selectEl.addEventListener(type, listener);
    }
  }
};
type: ইভেন্টের নাম ("click", "scroll", "load" ইত্যাদি)

listener: Callback ফাংশন, যা ইভেন্ট ট্রিগার হলে চালানো হবে।

all true হলে: একাধিক এলিমেন্টে forEach চালিয়ে প্রতিটিতে ইভেন্ট যোগ।

ফলাফল:

js
Copy code
on('click', '.btn', ()=>{ ... }, true);
– .btn নামক সকল এ্যালিমেন্টে click ইভেন্ট যোগ করে।

4. onscroll হেল্পার
js
Copy code
const onscroll = (el, listener) => {
  el.addEventListener('scroll', listener);
};
সরাসরি DOM এ scroll ইভেন্ট অ্যাশাইন করে।

document বা window– দুটোতেই কাজ করে।

5. Navbar Active Link Toggle
js
Copy code
let navbarlinks = select('#navbar .scrollto', true);
const navbarlinksActive = () => {
  let position = window.scrollY + 200;
  navbarlinks.forEach(navbarlink => {
    if (!navbarlink.hash) return;
    let section = select(navbarlink.hash);
    if (!section) return;
    if (position >= section.offsetTop && position <= section.offsetTop + section.offsetHeight) {
      navbarlink.classList.add('active');
    } else {
      navbarlink.classList.remove('active');
    }
  });
};
window.addEventListener('load', navbarlinksActive);
onscroll(document, navbarlinksActive);
window.scrollY: vert­i­cal scroll পজিশন (px)।

navbarlink.hash: লিংকের href="#about" থেকে "#about" রিটার্ন।

section.offsetTop ও offsetHeight: DOM এলিমেন্টের পজিশন ও উচ্চতা।

.classList.add/remove(): CSS ক্লাস টগল করে, যার ফলে active স্টাইল প্রয়োগ হয়।

load ইভেন্টে একবার, + scroll সময় মাস্টার ফাংশন রান।

6. Smooth Scroll Function
js
Copy code
const scrollto = (el) => {
  let header = select('#header');
  let offset = header.offsetHeight;
  let elementPos = select(el).offsetTop;
  window.scrollTo({
    top: elementPos - offset,
    behavior: 'smooth'
  });
};
header.offsetHeight: হেডারের উচ্চতা বের করে।

window.scrollTo({ behavior: 'smooth' }): ব্রাউজার-নেটিভ স্মুথ স্ক্রল।

7. Header Scroll State Toggle
js
Copy code
let selectHeader = select('#header');
let selectTopbar = select('#topbar');
const headerScrolled = () => {
  if (window.scrollY > 100) {
    selectHeader.classList.add('header-scrolled');
    if (selectTopbar) selectTopbar.classList.add('topbar-scrolled');
  } else {
    selectHeader.classList.remove('header-scrolled');
    if (selectTopbar) selectTopbar.classList.remove('topbar-scrolled');
  }
};
window.addEventListener('load', headerScrolled);
onscroll(document, headerScrolled);
ScrollY > 100 হলে <header>-এ .header-scrolled ক্লাস যোগ, নয়তো রিমুভ।

সিএসএস-অনুভূমিক স্বচ্ছতা, শ্যাডো ইত্যাদি পরিবর্তনের ক্ষেত্রে ব্যবহৃত হয়।

8. Back-to-Top Button
js
Copy code
let backtotop = select('.back-to-top');
const toggleBacktotop = () => {
  if (window.scrollY > 100) backtotop.classList.add('active');
  else backtotop.classList.remove('active');
};
window.addEventListener('load', toggleBacktotop);
onscroll(document, toggleBacktotop);
Scroll পজিশন > 100px হলে .active দিয়ে বাটন দেখায়, নয়তো লুকায়।

9. Mobile Nav Toggle
js
Copy code
on('click', '.mobile-nav-toggle', function(e) {
  select('#navbar').classList.toggle('navbar-mobile');
  this.classList.toggle('bi-list');
  this.classList.toggle('bi-x');
});
.toggle(): ক্লাস থাকলে রিমুভ, না থাকলে যোগ।

this: ঐ ইভেন্ট-ট্রিগারিং এলিমেন্ট (arrow-functions-এ this বাইন্ড হয় না, তাই এখানে normal function ব্যবহার)।

10. Mobile Dropdown Activation
js
Copy code
on('click', '.navbar .dropdown > a', function(e) {
  if (select('#navbar').classList.contains('navbar-mobile')) {
    e.preventDefault();
    this.nextElementSibling.classList.toggle('dropdown-active');
  }
}, true);
e.preventDefault(): লিংকের ডিফল্ট নেভিগেশন বন্ধ করে।

nextElementSibling: DOM ট্রাভার্সাল—<a>-এর পরের <ul> নির্বাচন।

.contains(): চেক করে .navbar-mobile ক্লাস আছে কিনা।

11. Scroll-to Links Handling
js
Copy code
on('click', '.scrollto', function(e) {
  if (select(this.hash)) {
    e.preventDefault();
    let navbar = select('#navbar');
    if (navbar.classList.contains('navbar-mobile')) {
      navbar.classList.remove('navbar-mobile');
      let navbarToggle = select('.mobile-nav-toggle');
      navbarToggle.classList.toggle('bi-list');
      navbarToggle.classList.toggle('bi-x');
    }
    scrollto(this.hash);
  }
}, true);
.scrollto ক্লাস যুক্ত লিংকগুলো স্মুথ স্ক্রল ট্রিগার করে।

মোবাইল মেনু প্রথমে ক্লোজ করে, তারপর স্ক্রল করে।

12. Hero Carousel Indicators
js
Copy code
let heroCarouselIndicators = select("#hero-carousel-indicators");
let heroCarouselItems = select('#heroCarousel .carousel-item', true);
heroCarouselItems.forEach((item, index) => {
  heroCarouselIndicators.innerHTML +=
    `<li data-bs-target="#heroCarousel" data-bs-slide-to="${index}"` +
    `${index === 0 ? " class='active'" : ""}></li>`;
});
Template literals (`…${…}…`) ব্যবহার করে ইনলাইন HTML বিল্ড।

প্রথম আইটেমে .active ক্লাস, বাকিতে নয়।

13. Menu Isotope Filtering
js
Copy code
window.addEventListener('load', () => {
  let menuContainer = select('.menu-container');
  if (menuContainer) {
    let menuIsotope = new Isotope(menuContainer, {
      itemSelector: '.menu-item',
      layoutMode: 'fitRows'
    });
    let menuFilters = select('#menu-flters li', true);
    on('click', '#menu-flters li', function(e) {
      e.preventDefault();
      menuFilters.forEach(el => el.classList.remove('filter-active'));
      this.classList.add('filter-active');
      menuIsotope.arrange({ filter: this.getAttribute('data-filter') });
    }, true);
  }
});
new Isotope(...): গ্রিড এলিমেন্টে লেআউট ফিল্টার প্রয়োগ করে।

.arrange({ filter: … }): ডাটা-ফিল্টার ডিনামিকালি অ্যাপ্লাই।

14. Swiper & GLightbox Initialization
js
Copy code
new Swiper('.events-slider', { /* config */ });
new Swiper('.testimonials-slider', { /* config */ });
const galleryLightbox = GLightbox({ selector: '.gallery-lightbox' });
নতুন Swiper ইনস্ট্যান্স তৈরি করে স্লাইডার,

GLightbox দিয়ে lightbox গ্যালারি।

সম্মিলিত সিনট্যাক্স টেবিল
সিনট্যাক্স	ব্যাখ্যা
IIFE	Self-executing scope wrapper
"use strict"	Strict mode
const / let	Block-scoped ভেরিয়েবল ডিক্লারেশন
Arrow Function =>	Shorter function syntax
Default Param all = false	প্যারামিটার ডিফল্ট ভ্যালু
Spread Operator [...x]	Iterable থেকে array creation
querySelector(All)	DOM সিলেকশন
addEventListener	ইভেন্ট হ্যান্ডলার যোগ
Template Literal `${}`	Inline expression injection
classList.toggle/add/remove	CSS ক্লাস ম্যানিপুলেশন
window.scrollTo({behavior:'smooth'})	Smooth scroll
Third-party init (new Swiper, new Isotope, GLightbox)	লাইব্রেরি ইনিশিয়ালাইজেশন

